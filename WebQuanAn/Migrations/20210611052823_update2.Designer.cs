// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebQuanAn.Models;

namespace WebQuanAn.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210611052823_update2")]
    partial class update2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebQuanAn.Models.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Hinh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Ho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("SDT");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("AdminUser");
                });

            modelBuilder.Entity("WebQuanAn.Models.CTHD", b =>
                {
                    b.Property<int>("MaDh")
                        .HasColumnType("int")
                        .HasColumnName("MaDH");

                    b.Property<int>("MaTd")
                        .HasColumnType("int")
                        .HasColumnName("MaTD");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaDh", "MaTd");

                    b.HasIndex("MaTd");

                    b.ToTable("CTDH");
                });

            modelBuilder.Entity("WebQuanAn.Models.DonHang", b =>
                {
                    b.Property<int>("MaDH")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaKH")
                        .HasColumnType("int")
                        .HasColumnName("MaKH");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime");

                    b.Property<byte>("TrangThai")
                        .HasColumnType("tinyint");

                    b.HasKey("MaDH");

                    b.HasIndex("MaKH");

                    b.ToTable("DonHang");
                });

            modelBuilder.Entity("WebQuanAn.Models.KhachHang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FacebookLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("GioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang");
                });

            modelBuilder.Entity("WebQuanAn.Models.PhanLoai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("PhanLoai");
                });

            modelBuilder.Entity("WebQuanAn.Models.ThucDon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Gia")
                        .HasColumnType("money");

                    b.Property<string>("HinhAnh")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MaLoai");

                    b.ToTable("ThucDon");
                });

            modelBuilder.Entity("WebQuanAn.Models.CTHD", b =>
                {
                    b.HasOne("WebQuanAn.Models.DonHang", "MaDhNavigation")
                        .WithMany("CTHDs")
                        .HasForeignKey("MaDh")
                        .IsRequired();

                    b.HasOne("WebQuanAn.Models.ThucDon", "MaTdNavigation")
                        .WithMany("CTHDs")
                        .HasForeignKey("MaTd")
                        .IsRequired();

                    b.Navigation("MaDhNavigation");

                    b.Navigation("MaTdNavigation");
                });

            modelBuilder.Entity("WebQuanAn.Models.DonHang", b =>
                {
                    b.HasOne("WebQuanAn.Models.KhachHang", "MaKhNavigation")
                        .WithMany("DonHangs")
                        .HasForeignKey("MaKH")
                        .IsRequired();

                    b.Navigation("MaKhNavigation");
                });

            modelBuilder.Entity("WebQuanAn.Models.ThucDon", b =>
                {
                    b.HasOne("WebQuanAn.Models.PhanLoai", "MaLoaiNavigation")
                        .WithMany("ThucDons")
                        .HasForeignKey("MaLoai")
                        .IsRequired();

                    b.Navigation("MaLoaiNavigation");
                });

            modelBuilder.Entity("WebQuanAn.Models.DonHang", b =>
                {
                    b.Navigation("CTHDs");
                });

            modelBuilder.Entity("WebQuanAn.Models.KhachHang", b =>
                {
                    b.Navigation("DonHangs");
                });

            modelBuilder.Entity("WebQuanAn.Models.PhanLoai", b =>
                {
                    b.Navigation("ThucDons");
                });

            modelBuilder.Entity("WebQuanAn.Models.ThucDon", b =>
                {
                    b.Navigation("CTHDs");
                });
#pragma warning restore 612, 618
        }
    }
}
