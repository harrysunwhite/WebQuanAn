


@model IPagedList<PhanLoai>
@*import this so we get our HTML Helper*@
@using X.PagedList.Mvc.Core;


@using X.PagedList;
@using X.PagedList.Web.Common
<div id="list">

    <div style="min-height:400px">
        <table class="table table table-striped table-bordered text-left w-100 " style="font-size:small">
            <thead class="bg-success">
                <tr>

                    <th>
                        Tên loại thực đơn
                    </th>

                    <th>ACTION</th>
                </tr>
            </thead>
            <tbody class="tbody">
                @foreach (var item in ViewBag.Names as IEnumerable<PhanLoai>)
                {
                    <tr>

                        <td>@item.TenLoai</td>

                        <td><a class="btn btn-info btn-sm btn-sm active" onclick="Edit(@item.Id)"><i class="fa fa-pencil-square-o" aria-hidden="true"></i></a>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div class="text-right">

        @{
            var pageRender = new PagedListRenderOptions
            {
                MaximumPageNumbersToDisplay = 5,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayPageCountAndCurrentLocation = false,
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },


                ContainerDivClasses = new[] { "pagination-container" }


            };
        }
        @{
            var searchModel = ViewBag.Data as PhanLoaiSearchModel;
        }


        @Html.PagedListPager((IPagedList<PhanLoai>)ViewBag.Names, page => Url.Action("PageList", new { page, TenLoai = searchModel.TenLoai }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(pageRender, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "nameListContainer" }))
    </div>




</div>






